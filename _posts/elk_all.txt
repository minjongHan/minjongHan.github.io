ElasticSearch 검색엔진
1. ElasticSearch 다운로드 & 설치
1.1. 다운로드 URL : https://www.elastic.co/kr/downloads/past-releases/elasticsearch-6-7-1	
-	해당 URL로 Elastic Search 6.7.1 버전을 다운로드 받을 수 있다. 다운로드 및 설치 방식은 여러가지 이므로 상황에 맞게 선택하여 다운로드한다.
 

1.2. 설치방법
-	다운로드가 완료되면 “elasticsearch-6.7.1.tar.gz” 해당 tar.gz파일을 압축해제 하여 원하는 서버 경로에 업로드 한다.
-	Elastic Search 6.7.1을 이용하기 위해서는 JAVA 8.0 이상이 설치되어 있어야 하며, 
“JAVA_HOME” 환경변수 가 정의되어 있어야한다. 시스템에서 별도로 환경변수 선언이 안되어 있는 경우 선언 해 줘야한다.
<< 검색엔진 서버 console >>
 
-	위의 항목들이 모두 충족되어 실행 되었을 경우 설치가 완료된다
-	검색엔진(Elastic Search) 운영서버 설치 현황
Master Node 경로 : /usr/share/elasticsearch     
	마스터 노드의 경우 url install 방식의 설치를 이용하여 폴더 구조가 다름  

Data1 Node 경로 : /usr/share/elasticsearch_data1
Data2 Node 경로 : /usr/share/elasticsearch_data2


	Elastic Search 폴더 구조
 

bin => 실행명령어
config => elasctic Searh 환경설정
logs =>  log정보
plugins => 플러그인 설치 시 해당 폴더에 생성된다. 

※	검색엔진 서버의 자세한 정보는 시스템 운영메뉴얼을 확인 하시기 바랍니다.
(로그확인, 서버 시작|종료, 검색엔진 환경설정 경로…)




2. ElasticSearch 서버 설정
2.1. 검색엔진 메모리 설정 (공통)
	config/jvm.options 파일에서 아래와 같이 값을 설정한다.
## ./config/jvm.options 파일일부 내용 ##
################################################################

# Xms represents the initial size of total heap space
# Xmx represents the maximum size of total heap space

-Xms8g   (최소 8 GB로 설정)
-Xmx8g   (최대 8 GM로 설정)

################################################################ 

2.2. Node 별 환경설정
A. 마스터 노드(master) 설정 => /etc/elasticsearch/elasticsearch.yml
# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
# 클러스트 이름 (연결되는 노드들 동일하게 설정)
cluster.name: findall-search
#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
# 노드 이름
node.name: node
# 마스터 노드로 동작여부 지정
node.master: true
# 데이터 노드로 동작여부 지정
node.data: false
#
# Add custom attributes to the node:
#
#node.attr.rack: r1
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
#path.data: /var/lib/elasticsearch
# 인덱스 생성 경로 지정
path.data: /data/elasticsearch
#
# Path to log files:
#
# 로그를 저장하는 경로지정
path.logs: /data/logs/master
#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
#bootstrap.memory_lock: true
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):
#
#network.host: 192.168.0.1
#접속 허용할 IP를 설정 / 0.0.0.0 은 모든 접근을 허용 | 127.0.0.1은 개발모드에서 프로덕트 모드로 변경
network.host
# 엘라스틱서치 클라이언트가 접근할 수 있는 TCP 포트, 기본 값은 9300
transport.tcp.port: 9300
transport.tcp.compress: true

#
# Set a custom port for HTTP:
#
#엘라스틱서치 서버에 접근할 수 있는 HTTP API 호출을 위한 포트번호 설정 / 기본 값은 9200
http.port: 9200
#
# For more information, consult the network module documentation.
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when new node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#

#노드가 여러개인 경우 유니캐스트로 활성화된 다른 서버를 찾음. 노드의 아이피를 [1.1.1.1, 2.2.2.2]와 같은 형식으로 넣어주면 된다.
discovery.zen.ping.unicast.hosts: ["10.0.10.98:9300", "10.0.10.98:9301", "10.0.10.98:9302"]

#
# Prevent the "split brain" by configuring the majority of nodes (total number of master-eligible nodes / 2 + 1):
#
#discovery.zen.minimum_master_nodes:
#
# For more information, consult the zen discovery module documentation.
#
# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
#gateway.recover_after_nodes: 3
#
# For more information, consult the gateway module documentation.
#
# ---------------------------------- Various -----------------------------------
#
# Require explicit names when deleting indices:
#
#action.destructive_requires_name: true


B. 데이터 노드1(data1) 설정 => /usr/share/elasticsearch_data1/config/elasticsearch.yml
# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
# 클러스트 이름 (연결되는 노드들 동일하게 설정)
cluster.name: findall-search
#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#



# 노드 이름
node.name: node1
node.master: false
node.data: true
#
# Add custom attributes to the node:
#
#node.attr.rack: r1
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
#path.data: /var/lib/elasticsearch
path.data: /data/elasticsearch_data1
#
# Path to log files:
#
path.logs: /data/logs/data1
#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
#bootstrap.memory_lock: true
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):
#
#network.host: 192.168.0.1
network.host: 0.0.0.0
transport.tcp.port: 9301
transport.tcp.compress: true


#
# Set a custom port for HTTP:
#
#http.port: 9201
#
# For more information, consult the network module documentation.
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when new node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#

#gateway.type: local

#discovery.zen.ping.multicast.enabled: false
discovery.zen.ping.unicast.hosts: ["10.0.10.98:9300", "10.0.10.98:9301", "10.0.10.98:9302"]
#action.auto_create_index: true
#index.mapper.dynamic: true

#
# Prevent the "split brain" by configuring the majority of nodes (total number of master-eligible nodes / 2 + 1):
#
#discovery.zen.minimum_master_nodes:
#
# For more information, consult the zen discovery module documentation.
#
# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
#gateway.recover_after_nodes: 3
#
# For more information, consult the gateway module documentation.
#
# ---------------------------------- Various -----------------------------------
#
# Require explicit names when deleting indices:
#
#action.destructive_requires_name: true









C. 데이터 노드2(data2) 설정 => /usr/share/elasticsearch_data2/config/elasticsearch.yml
# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
cluster.name: findall-search
#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
node.name: node2
node.master: false
node.data: true
#
# Add custom attributes to the node:
#
#node.attr.rack: r1
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
#path.data: /var/lib/elasticsearch
path.data: /data/elasticsearch_data2
#
# Path to log files:
#
path.logs: /data/logs/data2
#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
#bootstrap.memory_lock: true
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):
#
#network.host: 192.168.0.1
network.host: 0.0.0.0
transport.tcp.port: 9302
transport.tcp.compress: true


#
# Set a custom port for HTTP:
#
http.port: 9202
#
# For more information, consult the network module documentation.
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when new node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#

#gateway.type: local

#discovery.zen.ping.multicast.enabled: false
discovery.zen.ping.unicast.hosts: ["10.0.10.98:9300", "10.0.10.98:9301", "10.0.10.98:9302"]
#action.auto_create_index: true
#index.mapper.dynamic: true

#
# Prevent the "split brain" by configuring the majority of nodes (total number of master-eligible nodes / 2 + 1):
#
#discovery.zen.minimum_master_nodes:
#
# For more information, consult the zen discovery module documentation.
#
# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
#gateway.recover_after_nodes: 3
#
# For more information, consult the gateway module documentation.
#
# ---------------------------------- Various -----------------------------------
#
# Require explicit names when deleting indices:
#
#action.destructive_requires_name: true


2.3. ElasticSearch Node 서버 실행
## root로 접속 ##
$ sudo –I   #root접속

ex) # cd /usr/share/elasticsearch_data1/bin/elasticsearch –d    # 1번 데이터 노드서버 백그라운드 실행


3. ElasticSearch 사용법
3.1. ElasticSearch 조회
A.	ElasticSearch Head 구글확장 프로그램
-	ElasticSearch는 별도로 제공되는 클라이언트 프로그램이 없으므로, 구글 확장프로그램 “ElasticSearch Head” 를 구글 브라우저에 설치한다.
-	설치 URL : https://chrome.google.com/webstore/detail/elasticsearch-head/ffmkiejjmecolpfloofpjologoblkegm
-	설치 완료 후 실행 화면
  
-	ElasticSearch Head 사용법










 
	 
 
※ 위와 같이 해당 조건들을 선택하고 입력하여 원하는 결과를 조회 가능하며, 조회 이외에 등록, 수정, 삭제, index생성, 설정값변경… 등등 모든 명령어가 실행 가능하다.

B.	ElasticSearch Query DSL 검색
쿼리 DLS로 질의 할 때는 /_search URL로 GET(POST) 요청을 보낸다. (POST도 가능함)
GET /_search

특정 인덱스에 제한해서 검색하고 싶다면 URL에 인덱스를 명시한다.
GET /index/_search

특정 타입으로 제한할 수도 있다.
GET /index/type/_search

쿼리 DSL은 HTTP 요청 메시지 본문에 JSON 문서로 사입한다. 뭐리 옵션은 “query” 속성의 값으로 넣는다.
GET /index/_search
{
  "query": { ... }
}

-	쿼리와 필터의 구분
쿼리와 필터는 둘 다 문서를 걸러내고 선택하는 용도이므로 비슷하지만, 구체적인 쓰임새가 다르다.
쿼리	필터
연관성	YES/NO
캐쉬 불가	캐쉬 가능
느림	빠름

-	쿼리에서 사용할 수 있는 기본옵션 속성 정의
※ 벼룩시장 부동산에서 주로 사용했던 속성을 정의함.
	match_all : 모든 문서와 매치한다. 생략한 것과 결과가 같다.전체조회
GET /_search
{
"query": {
"match_all": {}
}
}

	match : term과 마찬가지로 inverted index 에 저장되는 token 들 중에서 일치하는 녀석이 있는지 찾아주는데, 차이점은 바로 검색하는 키워드를 analyze 한다는 것이다. 이 analyze 한 결과의 token 들 중에서 하나라도 일치하면 결과 document 에 포함된다.
# 검색필내용 : 일산시 동구
GET /advrts_land/_search
{
"query": {
"match": {
"locplcGu": “일산시"
}
}
}

	term : 사전적 의미로 보자면 용어 쯤 되겠다. 해당 content 의 inverted index 에 저장되는 token 들 중에서 쿼리의 키워드와 일치하는 녀석이 있는지 찾아준다.
GET /advrts_land/_search
{
"query": {
"term": {
"locplcDong": "봉천동"
}
}
}

	terms : term 필터와 같지만, 복수의 텀을 배열로 지정할 수 있다.

GET /advrts_land/_search
{
"query": {
"terms": {
"locplcDong": ["봉천동", "신림동" ]
}
}
}

	range : 지정한 필드에 들어있는 값이 지정한 범위에 포함되는 문서와 매치된다.
	수, 날짜, 문자열 등 다양한 타입에 적용 가능하지만, 수와 날짜에 최적화되어 있다고 한다.
GET /advrts_land/_search
{
"query": {
"range": {
"sortAmnt":  {
   "gte" : 100000000,
   "lt" : 300000000 
}
}
}
}

	multi_match : 쿼리를 시도할 때 검색어를 하나의 필드가 아닌 여러개의 필드를 통해 검색
GET /advrts_land/_search
{
"query": {
"multi_match": {
    "query" : "경기",
"fields": ["locplcSi ", " locplcSiOrg" ]
}
}
}

	wildcard : RDBMS LIKE 검색과 유사한 검색(현재 부동산 매물 검색에 사용 중)

GET /advrts_land/_search
{
"query": {
"wildcard ": {
    " locplcDong" : "*신림*"
}
}
}



	geo_distance : 지도좌표 기준 반경 200m 매물 검색

GET /advrts_land/_search
{
"query": {
"geo_distance": {
    " distance" : "750m",
    "location” : {
   "lat" : 35.84206076602811,
   "lon" : 128.55404119599433
}
}
}
}

	geo_bounding_box : top_left 와 bottom_right 두 개의 옵션에 각각 지도좌표 위치를 입력하고 이 점들을 토대로 그린 네모 칸 안에 위치하는 매물을 검색

GET /advrts_land/_search
{
"query": {
"geo_bounding_box ": {
"location” : {
   "bottom_right: {
      "lat": 37.4899,
      "lon" : 127.0388
},
"top_left" : {
   "lat" : 37.5779,
   "lon" : 126.9617
}
}
}
}
}

	must : 반드시 포함하는 조건 검색 (AND조건)

GET /advrts_land/_search
{
"query": {
"bool": {
"must": [
    {
“term” : {“locplcDong” : “봉천동”}
}
]

}
}
}


	should : 여러 개 중 하나를 포함한 조건 검색 (OR조건)

GET /advrts_land/_search
{
"query": {
"bool": {
"should": [
    {
“term” : {“amountKindCd” : “D”}
},
{
“term” : {“amountKindCd” : “S”}
}
]
}
}
}



	bool : boolean값을 반환하며, 하위에 must, should, must_not 쿼리를 여러 개 조합하여 사용할 수 있다..

GET /advrts_land/_search
{
"query": {
"bool": {
"must": [
    {
“term” : {“locplcDong” : “봉천동”}
},
“bool” : {
        "should": [
            {
“term” : {“amountKindCd” : “D”}
},
{
“term” : {“amountKindCd” : “S”}
}
]
}
]
}
}
}
Where a = 1 and ( b = 2 or c=3)
※ 조건 설명 : 봉천동으로 조회되는 매물 중 동프리미엄 OR 지하철프리미엄을 포함한 매물 조회 

	sort : 정렬기능

GET /advrts_land/_search
{
"query": {
"bool": {
"must": [
    {
“term” : {“locplcDong” : “봉천동”}
}
]

}
},
“sort” : {
    “sortAmnt : {
       “order” : “desc”
}
}
}
※ 조건 설명 : 봉천동으로 조회된 매물을 가격 내림차순으로 정렬하여 조회

	size : 조회결과 size정의

GET /advrts_land/_search
{
"query": {
"bool": {
"must": [
    {
“term” : {“locplcDong” : “봉천동”}
}
]

}
},
“size” : 10
}
※ SIZE는 기본값 20

	from : 

GET /advrts_land/_search
{
"query": {
"bool": {
"must": [
    {
“term” : {“locplcDong” : “봉천동”}
}
]

}
},
“size” : 10,
“from” : 10
}

※ 조회된 결과 10개 이후 10개 조회함. Size와 from을 이용하여 페이징 만들 수 있음.
FROM 기본값 0


